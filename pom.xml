<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>maven_jmeter_jenkins</groupId>
	<artifactId>com.dangdang</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<project.build.directory>**/</project.build.directory>
		
	</properties>
	
	<build>
		<plugins>
			<plugin>
				<groupId>com.lazerycode.jmeter</groupId>
				<artifactId>jmeter-maven-plugin</artifactId>
				<version>1.10.1</version>
				<configuration>
					<resultsFileFormat>xml</resultsFileFormat>
					<ignoreResultFailures>true</ignoreResultFailures>
					<testResultsTimestamp>false</testResultsTimestamp>
				</configuration>
				<executions>
					<execution>
						<id>jmeter-tests</id>
						<phase>verify</phase>
						<goals>
							<goal>jmeter</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		<plugin>
<groupId>com.lazerycode.jmeter</groupId>
<artifactId>jmeter-analysis-maven-plugin</artifactId>
<version>1.0.6</version>
<executions>
<execution>
<goals>
<goal>analyze</goal>
</goals>
<phase>post-integration-test</phase>
<configuration>
<!--
source file that contains jmeter result data. Needs to be XML format or a GZIPed XML format
-->
<source>${project.build.directory}/jmeter/results/*.jtl</source>

<!--
directory where to store analysis report files. At least a file "summary.txt" will be stored here.
-->
<targetDirectory>${project.build.directory}/reports</targetDirectory>

<!--
Defines groups of requests by URL patterns,
e.g. URIs starting with /mock/page are associated with group "pages". All analysis results are
If there is no such mapping then the threadgroups from the jmeter.xml are used.
-->
<!--<requestGroups>-->
<!--<test>/en-US/firefox/**</test>-->
<!--</requestGroups>-->

<!--
If set to true, additional files "<category>-sizes.csv" and "<category>-durations.csv" will be stored.
These files contain detailed information for response size and response durations for every URI.
-->
<generateCSVs>true</generateCSVs>

<!--
If set to true, additional chart files "<category>-durations.png" will be created.
-->
<generateCharts>true</generateCharts>

<!-- The database configuration -->

<userName>xxx</userName>

<passWord>xxx</passWord>

<dataBase>xxx</dataBase>

<host>xxx.xxx.xxx.xxx:3306</host>

<!--
Mapping from resource URL to file name. Every resource will be downloaded and stored in 'targetDirectory'
with the given filename. Tokens "_FROM_" and "_TO_" can be used as placeholders. These placeholders will
be replaced by timestamps of execution interval (formatted as ISO8601, e.g. '20111216T145509+0100').
-->
<!--<remoteResources>-->
<!--<property>-->
<!--<name>http://yourhost/path?from=_FROM_&amp;to=_TO_</name>-->
<!--<value>my_resource.txt</value>-->
<!--</property>-->
<!--</remoteResources>-->

</configuration>
</execution>
</executions>
</plugin>

		</plugins>
</build>			
</project>	